/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projet.graphique;

import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import projet.main.Codage;
import projet.main.Histogram;
import projet.main.ImagePNG;
import projet.main.ImageView;
import projet.main.Message;

/**
 *
 * @author jecobich
 */
public class Fenetre extends javax.swing.JFrame {

    /**
     * Creates new form Fenetre
     */
    public Fenetre() {
        initComponents();
        setLocation(100, 100);
        radioBoutonBinairisation.setEnabled(false);
        boutonInserer.setEnabled(false);
        checkBox.setEnabled(false);
        boutonAnnulationModifs.setEnabled(false);
        boutonSauvegarder.setEnabled(false);
        boutonVideMemoire.setEnabled(false);
        boutonSelectionFichierTexte.setEnabled(false);
        boutonDecodage.setEnabled(false);
        boutonEncoder.setEnabled(false);
        boutonFlouGaussien.setEnabled(false);
        boutonContour.setEnabled(false);
        radioBoutonRouge.setEnabled(false);
        radioBoutonVert.setEnabled(false);
        radioBoutonBleu.setEnabled(false);
        boutonHistogramme.setEnabled(false);
        boutonSelectionInsertion.setEnabled(false);
        jSlider1.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        boutonSauvegarder = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        textDonneesImage = new javax.swing.JTextField();
        boutonVideMemoire = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        radioBoutonBleu = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        radioBoutonGris = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        textBinairisation = new javax.swing.JTextField();
        radioBoutonRouge = new javax.swing.JRadioButton();
        boutonSelectionInsertion = new javax.swing.JButton();
        radioBoutonVert = new javax.swing.JRadioButton();
        boutonInserer = new javax.swing.JButton();
        checkBox = new javax.swing.JCheckBox();
        boutonExtraire = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        radioBoutonBinairisation = new javax.swing.JRadioButton();
        boutonAnnulationModifs = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        insertionMessage = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        boutonSelectionFichierTexte = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAeraMessageCode = new javax.swing.JTextArea();
        boutonDecodage = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        boutonEncoder = new javax.swing.JButton();
        boutonContour = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        boutonFlouGaussien = new javax.swing.JButton();
        boutonHistogramme = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jSlider1 = new javax.swing.JSlider();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 914, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 641, Short.MAX_VALUE)
        );

        boutonSauvegarder.setText("Sauvegarder");
        boutonSauvegarder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonSauvegarderActionPerformed(evt);
            }
        });

        jLabel3.setText("Données de l'image :");

        jLabel4.setText("Taille ");

        textDonneesImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textDonneesImageActionPerformed(evt);
            }
        });

        boutonVideMemoire.setText("Vider mémoire");
        boutonVideMemoire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonVideMemoireActionPerformed(evt);
            }
        });

        buttonGroup1.add(radioBoutonBleu);
        radioBoutonBleu.setText("Canal Bleu");
        radioBoutonBleu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBoutonBleuActionPerformed(evt);
            }
        });

        jLabel5.setText("Insertion d'une image dans une autre :");

        buttonGroup1.add(radioBoutonGris);
        radioBoutonGris.setText("Canal Gris");
        radioBoutonGris.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBoutonGrisActionPerformed(evt);
            }
        });

        jLabel6.setText("=>");

        textBinairisation.setText("80");
        textBinairisation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textBinairisationActionPerformed(evt);
            }
        });

        buttonGroup1.add(radioBoutonRouge);
        radioBoutonRouge.setText("Canal Rouge");
        radioBoutonRouge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBoutonRougeActionPerformed(evt);
            }
        });

        boutonSelectionInsertion.setText("Selectionner l'image");
        boutonSelectionInsertion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonSelectionInsertionActionPerformed(evt);
            }
        });

        buttonGroup1.add(radioBoutonVert);
        radioBoutonVert.setText("Canal Vert");
        radioBoutonVert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBoutonVertActionPerformed(evt);
            }
        });

        boutonInserer.setText("Inserer");
        boutonInserer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonInsererActionPerformed(evt);
            }
        });

        checkBox.setText("Utiliser comme image");
        checkBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxActionPerformed(evt);
            }
        });

        boutonExtraire.setText("Extraire");
        boutonExtraire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonExtraireActionPerformed(evt);
            }
        });

        jLabel2.setText("  Seuil (0-255)");

        jLabel7.setText("=>");

        jLabel1.setText("Cannaux de couleur :");

        buttonGroup1.add(radioBoutonBinairisation);
        radioBoutonBinairisation.setText("Binairisation");
        radioBoutonBinairisation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBoutonBinairisationActionPerformed(evt);
            }
        });

        boutonAnnulationModifs.setText("Annuler les modifications");
        boutonAnnulationModifs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonAnnulationModifsActionPerformed(evt);
            }
        });

        jLabel9.setText("Insertion message :");

        insertionMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertionMessageActionPerformed(evt);
            }
        });

        jLabel10.setText("Saisir le message");

        boutonSelectionFichierTexte.setText("Encoder un fichier texte");
        boutonSelectionFichierTexte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonSelectionFichierTexteActionPerformed(evt);
            }
        });

        textAeraMessageCode.setColumns(20);
        textAeraMessageCode.setRows(5);
        jScrollPane1.setViewportView(textAeraMessageCode);

        boutonDecodage.setText("Decodage");
        boutonDecodage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonDecodageActionPerformed(evt);
            }
        });

        jTextField2.setText("10");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabel11.setText("nb caractère:");

        boutonEncoder.setText("Encoder");
        boutonEncoder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonEncoderActionPerformed(evt);
            }
        });

        boutonContour.setText("Contour");
        boutonContour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonContourActionPerformed(evt);
            }
        });

        jLabel13.setText("Filtrage :");

        boutonFlouGaussien.setText("Flou Gaussien");
        boutonFlouGaussien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonFlouGaussienActionPerformed(evt);
            }
        });

        boutonHistogramme.setText("Histogramme");
        boutonHistogramme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonHistogrammeActionPerformed(evt);
            }
        });

        jLabel12.setText("Steganalyse :");

        jLabel14.setText("Decalage binaire");

        jSlider1.setMaximum(8);
        jSlider1.setMinorTickSpacing(1);
        jSlider1.setPaintLabels(true);
        jSlider1.setPaintTicks(true);
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });

        jMenu1.setText("File");

        jMenuItem1.setText("Ouvrir une image");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textDonneesImage, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(boutonSauvegarder, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(boutonAnnulationModifs)
                        .addGap(31, 31, 31)
                        .addComponent(boutonVideMemoire)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addGap(37, 37, 37)
                                            .addComponent(boutonSelectionFichierTexte)
                                            .addGap(18, 18, 18)
                                            .addComponent(boutonDecodage)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jLabel11)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel13)
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(37, 37, 37)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(radioBoutonGris)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(radioBoutonBinairisation)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(textBinairisation, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(radioBoutonVert)
                                                    .addComponent(radioBoutonBleu)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addComponent(boutonSelectionInsertion, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(jLabel6))
                                                            .addComponent(checkBox))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(boutonInserer)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jLabel7)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(boutonExtraire))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                    .addComponent(boutonHistogramme)
                                                                    .addGroup(layout.createSequentialGroup()
                                                                        .addComponent(jLabel14)
                                                                        .addGap(31, 31, 31)
                                                                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                                .addGap(84, 84, 84))
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(insertionMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(boutonEncoder)))
                                                        .addGap(24, 24, 24)))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(radioBoutonRouge)
                                                    .addGap(332, 332, 332))))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addGap(18, 18, 18)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addGap(18, 18, 18)
                                                    .addComponent(boutonContour)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(boutonFlouGaussien, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jLabel8))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel1)
                                                        .addComponent(jLabel9))
                                                    .addGap(0, 0, Short.MAX_VALUE))))))
                                .addGap(0, 23, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel12)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(textDonneesImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boutonSauvegarder)
                    .addComponent(boutonVideMemoire)
                    .addComponent(boutonAnnulationModifs))
                .addGap(20, 20, 20))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(radioBoutonRouge)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioBoutonVert)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioBoutonBleu)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioBoutonGris)
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(radioBoutonBinairisation)
                            .addComponent(jLabel2)
                            .addComponent(textBinairisation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(boutonSelectionInsertion)
                            .addComponent(boutonInserer)
                            .addComponent(boutonExtraire)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkBox)
                        .addGap(5, 5, 5)
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(insertionMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(boutonEncoder))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(boutonDecodage)
                                .addComponent(jLabel11)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(boutonSelectionFichierTexte))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(jLabel8))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(boutonContour)
                                    .addComponent(boutonFlouGaussien))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14)
                        .addGap(44, 44, 44)
                        .addComponent(boutonHistogramme))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        String chemin = "";
        imageBF = null;
        JFileChooser jFileChooser = new JFileChooser(".");
        int retour = jFileChooser.showOpenDialog(null);
        if (retour == JFileChooser.APPROVE_OPTION) {
            chemin = jFileChooser.getSelectedFile().getName();
            this.path = chemin;
        }
        try {
            imageBF = ImageIO.read(new File(chemin));
            imageSave = imageBF;
        } catch (IOException ex) {
            Logger.getLogger(Fenetre.class.getName()).log(Level.SEVERE, null, ex);
        }
        ImagePNG imagePNG = new ImagePNG(imageBF);
        Graphics2D graphic = (Graphics2D) jPanel1.getGraphics();
        graphic.drawImage(imagePNG.createBufferedImage(), 0, 0, this);

        //Chargement des données pour la taille de l'image
        textDonneesImage.setText(imagePNG.getWidth() + "x" + imagePNG.getHeight());

        boutonAnnulationModifs.setEnabled(true);
        boutonSauvegarder.setEnabled(true);
        boutonVideMemoire.setEnabled(true);
        insertionMessage.setEnabled(true);
        boutonSelectionFichierTexte.setEnabled(true);
        textAeraMessageCode.setEnabled(true);
        boutonDecodage.setEnabled(true);
        boutonEncoder.setEnabled(true);
        boutonContour.setEnabled(true);
        boutonFlouGaussien.setEnabled(true);
        radioBoutonRouge.setEnabled(true);
        radioBoutonVert.setEnabled(true);
        radioBoutonBleu.setEnabled(true);
        boutonHistogramme.setEnabled(true);
        boutonSelectionInsertion.setEnabled(true);
        boutonExtraire.setEnabled(false);
        boutonExtraire.setEnabled(true);
        jSlider1.setEnabled(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void radioBoutonRougeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBoutonRougeActionPerformed

        if (imageBF == null) {
            JOptionPane.showMessageDialog(null, MessageChargementImage);
        } else {
            BufferedImage im = new ImagePNG(imageBF).getRed().createBufferedImage();
            Graphics2D gd = (Graphics2D) jPanel1.getGraphics();
            gd.drawImage(im, 0, 0, this);
            jPanel1.paintComponents(gd);
            imageSave = im;
        }


    }//GEN-LAST:event_radioBoutonRougeActionPerformed

    private void radioBoutonVertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBoutonVertActionPerformed

        if (imageBF == null) {
            JOptionPane.showMessageDialog(null, MessageChargementImage);
        } else {
            BufferedImage im = new ImagePNG(imageBF).getGreen().createBufferedImage();
            Graphics2D gd = (Graphics2D) jPanel1.getGraphics();
            gd.drawImage(im, 0, 0, this);
            jPanel1.paintComponents(gd);
            imageSave = im;
        }

    }//GEN-LAST:event_radioBoutonVertActionPerformed

    private void radioBoutonBleuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBoutonBleuActionPerformed

        if (imageBF == null) {
            JOptionPane.showMessageDialog(null, MessageChargementImage);
        } else {
            BufferedImage im = new ImagePNG(imageBF).getBlue().createBufferedImage();
            Graphics2D gd = (Graphics2D) jPanel1.getGraphics();
            gd.drawImage(im, 0, 0, this);
            jPanel1.paintComponents(gd);
            imageSave = im;
        }
    }//GEN-LAST:event_radioBoutonBleuActionPerformed

    private void radioBoutonBinairisationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBoutonBinairisationActionPerformed
        if (imageBF == null) {
            JOptionPane.showMessageDialog(null, MessageChargementImage);
        }
        if (imageBF != null && textBinairisation.getText() == "") {
            JOptionPane.showMessageDialog(null, "Il faut choisir un seuil pour la binairisation");
        }
        if (imageBF != null && textBinairisation.getText() != "") {
            ImagePNG imPNG = new ImagePNG(imageBF);
            int valeur = Integer.parseInt(textBinairisation.getText());
            Graphics2D gd = (Graphics2D) jPanel1.getGraphics();
            imageSave = imPNG.binairisation(valeur).createBufferedImage();
            gd.drawImage(imageSave, 0, 0, this);
        }
    }//GEN-LAST:event_radioBoutonBinairisationActionPerformed

    private void textBinairisationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textBinairisationActionPerformed
        int valeur = -1; //pour verifer si il y a eu une erreur de conversion en entier et eviter de repeter la meme boite de dialogue
        boolean verif = true;
        try {
            valeur = Integer.parseInt(textBinairisation.getText());
        } catch (NumberFormatException e) {
            verif = false;
            JOptionPane.showMessageDialog(null, "Il faut saisir un entier entre 0 et 255");
        }
        if ((valeur < 0 || valeur > 255) && verif) {
            JOptionPane.showMessageDialog(null, "Il faut choisir une valeur entre 0 et 255");
        } else if (verif == true) {
            radioBoutonBinairisation.setEnabled(true);
        }
    }//GEN-LAST:event_textBinairisationActionPerformed

    private void radioBoutonGrisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBoutonGrisActionPerformed

        if (imageBF == null) {
            JOptionPane.showMessageDialog(null, MessageChargementImage);
        } else {
            BufferedImage im = new ImagePNG(imageBF).getGrey().createBufferedImage();
            Graphics2D gd = (Graphics2D) jPanel1.getGraphics();
            gd.drawImage(im, 0, 0, this);
            jPanel1.paintComponents(gd);
            imageSave = im;
        }
    }//GEN-LAST:event_radioBoutonGrisActionPerformed

    private void boutonSauvegarderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonSauvegarderActionPerformed
        if (imageSave == null) {
            JOptionPane.showMessageDialog(null, "Ouvrir ou modifier une image pour l'enregistrer");
        } else {
            JFileChooser jFileChooser = new JFileChooser(".");
            int retour = jFileChooser.showSaveDialog(null);
            if (retour == JFileChooser.APPROVE_OPTION) {
                ImagePNG imagePNG = new ImagePNG(imageSave);
                imagePNG.saveImage(jFileChooser.getSelectedFile().getName());
            }
        }

    }//GEN-LAST:event_boutonSauvegarderActionPerformed

    private void textDonneesImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textDonneesImageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textDonneesImageActionPerformed

    private void boutonHistogrammeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonHistogrammeActionPerformed
        if (imageSave == null) {
            JOptionPane.showMessageDialog(null, MessageChargementImage);
        } else {
            Histogram histogram = new Histogram(new ImagePNG(imageSave));
            histogram.setVisible(true);
        }

    }//GEN-LAST:event_boutonHistogrammeActionPerformed

    private void boutonSelectionInsertionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonSelectionInsertionActionPerformed
        if (imageBF == null) {
            JOptionPane.showMessageDialog(null, MessageChargementImage);
        } else {
            File file;
            JFileChooser jFileChooser = new JFileChooser(".");
            int retour = jFileChooser.showOpenDialog(null);
            if (retour == JFileChooser.APPROVE_OPTION) {
                file = jFileChooser.getSelectedFile();
                try {
                    imageInseree = ImageIO.read(file);
                } catch (IOException ex) {
                    Logger.getLogger(Fenetre.class.getName()).log(Level.SEVERE, null, ex);
                }
                boutonInserer.setEnabled(true);
            }
        }
    }//GEN-LAST:event_boutonSelectionInsertionActionPerformed

    private void boutonVideMemoireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonVideMemoireActionPerformed
        jPanel1.removeAll();
        jPanel1.repaint();
        imageBF = null;
        imageSave = null;
        imageInseree = null;
    }//GEN-LAST:event_boutonVideMemoireActionPerformed

    private void boutonInsererActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonInsererActionPerformed
        ImagePNG imagePNG1 = new ImagePNG(imageBF);
        ImagePNG imagePNG2 = new ImagePNG(imageInseree);
        ImagePNG insertion = imagePNG1.insertImage(imagePNG2);
        Graphics2D g = (Graphics2D) jPanel1.getGraphics();
        imageSave = insertion.createBufferedImage();
        g.drawImage(imageSave, 0, 0, this);
        jPanel1.paintComponents(g);
        checkBox.setEnabled(true);
    }//GEN-LAST:event_boutonInsererActionPerformed

    private void boutonExtraireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonExtraireActionPerformed

        if (imageSave == null) {
            JOptionPane.showMessageDialog(null, MessageChargementImage);
        } else {
            ImagePNG imagePNGInseree = new ImagePNG(imageSave);
            ImageView imageViewInseree = new ImageView("Image inseree",
                    imagePNGInseree.getInseredImage().createBufferedImage());
            imageViewInseree.setVisible(true);
        }

    }//GEN-LAST:event_boutonExtraireActionPerformed

    private void checkBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxActionPerformed
        if (checkBox.isSelected()) {
            imageBF = imageSave;
            radioBoutonGris.setEnabled(false);
            textBinairisation.setEnabled(false);
        } else {
            try {
                imageBF = ImageIO.read(new File(path));
            } catch (IOException ex) {
                Logger.getLogger(Fenetre.class.getName()).log(Level.SEVERE, null, ex);
            }
            radioBoutonGris.setEnabled(true);
            textBinairisation.setEnabled(true);
        }
    }//GEN-LAST:event_checkBoxActionPerformed

    private void boutonAnnulationModifsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonAnnulationModifsActionPerformed
        Graphics2D g = (Graphics2D) jPanel1.getGraphics();
        imageSave = imageBF;
        g.drawImage(imageBF, 0, 0, this);
        jPanel1.paintComponents(g);
    }//GEN-LAST:event_boutonAnnulationModifsActionPerformed

    private void insertionMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertionMessageActionPerformed
        
    }//GEN-LAST:event_insertionMessageActionPerformed

    private void boutonSelectionFichierTexteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonSelectionFichierTexteActionPerformed
        JFileChooser jFileChooser = new JFileChooser(".");
        int retour = jFileChooser.showOpenDialog(null);
        String message = "";
        if(retour == JFileChooser.APPROVE_OPTION){
            BufferedReader bf = null;
            try{
                bf = new BufferedReader(new FileReader(jFileChooser.getSelectedFile().getName()));
                while(bf.ready()){
                    message += bf.readLine();
                }  
            }catch(IOException e){
                e.printStackTrace();
            }
        }
        Message msg = new Message(message);
        msg.binaire();
        imageSave = Codage.encodage(new ImagePNG(imageBF), msg.getmsgBinaire()).createBufferedImage();
        textAeraMessageCode.setText(message);
    }//GEN-LAST:event_boutonSelectionFichierTexteActionPerformed

    private void boutonDecodageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonDecodageActionPerformed
        String message = Codage.decodage(new ImagePNG(imageSave));
        textAeraMessageCode.setText(message.substring(0,Integer.parseInt(jTextField2.getText())));
    }//GEN-LAST:event_boutonDecodageActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        int valeur = 10; //pour verifer si il y a eu une erreur de conversion en entier et eviter de repeter la meme boite de dialogue
        try {
            valeur = Integer.parseInt(jTextField2.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Il faut saisir un entier");
        }
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void boutonEncoderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonEncoderActionPerformed
        String message = insertionMessage.getText();
        Message msg = new Message(message);
        msg.binaire();
        imageSave = Codage.encodage(new ImagePNG(imageBF), msg.getmsgBinaire()).createBufferedImage();
    }//GEN-LAST:event_boutonEncoderActionPerformed

    private void boutonContourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonContourActionPerformed
        ImagePNG imagePNG = new ImagePNG(imageBF);
        imagePNG = imagePNG.binairisation(Integer.parseInt(textBinairisation.getText())).filtrage("contour").
                binairisation(Integer.parseInt(textBinairisation.getText())).toNegatif();
        imageSave = imagePNG.createBufferedImage();
        Graphics2D g = (Graphics2D) jPanel1.getGraphics();
        g.drawImage(imageSave, 0, 0, this);
        jPanel1.paintComponents(g);
        
    }//GEN-LAST:event_boutonContourActionPerformed

    private void boutonFlouGaussienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonFlouGaussienActionPerformed
        ImagePNG imagePNG = new ImagePNG(imageBF);
        imagePNG = imagePNG.filtrage("flou_gauss");
        imageSave = imagePNG.createBufferedImage();
        Graphics2D g = (Graphics2D) jPanel1.getGraphics();
        g.drawImage(imageSave, 0, 0, this);
        jPanel1.paintComponents(g);
    }//GEN-LAST:event_boutonFlouGaussienActionPerformed

    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
        ImagePNG imagePNG = new ImagePNG(imageSave);
        imagePNG = imagePNG.decalage(jSlider1.getValue());
        Graphics2D g = (Graphics2D) jPanel1.getGraphics();
        g.drawImage(imagePNG.createBufferedImage(), 0, 0, this);
    }//GEN-LAST:event_jSlider1StateChanged

    private BufferedImage imageBF = null;
    private BufferedImage imageBFSave = null;
    private BufferedImage imageSave = null;
    private BufferedImage imageInseree = null;
    private BufferedImage imageAssemblee = null;
    private String MessageChargementImage = "Il faut charger une image";
    private String path = "";

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boutonAnnulationModifs;
    private javax.swing.JButton boutonContour;
    private javax.swing.JButton boutonDecodage;
    private javax.swing.JButton boutonEncoder;
    private javax.swing.JButton boutonExtraire;
    private javax.swing.JButton boutonFlouGaussien;
    private javax.swing.JButton boutonHistogramme;
    private javax.swing.JButton boutonInserer;
    private javax.swing.JButton boutonSauvegarder;
    private javax.swing.JButton boutonSelectionFichierTexte;
    private javax.swing.JButton boutonSelectionInsertion;
    private javax.swing.JButton boutonVideMemoire;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox checkBox;
    private javax.swing.JTextField insertionMessage;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JRadioButton radioBoutonBinairisation;
    private javax.swing.JRadioButton radioBoutonBleu;
    private javax.swing.JRadioButton radioBoutonGris;
    private javax.swing.JRadioButton radioBoutonRouge;
    private javax.swing.JRadioButton radioBoutonVert;
    private javax.swing.JTextArea textAeraMessageCode;
    private javax.swing.JTextField textBinairisation;
    private javax.swing.JTextField textDonneesImage;
    // End of variables declaration//GEN-END:variables
}
